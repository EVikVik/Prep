# Имеется изображение, представленное матрицей N×N;
# каждый пиксел пред- ставлен 4 байтами. Напишите метод для поворота изображения
# на 90 градусов. Удастся ли вам выполнить эту операцию «на месте»?
# Подсказки: 51, 100

def rotate_matrix(matrix):
    '''rotates a matrix 90 degrees clockwise'''
    n = len(matrix)
    # n = 6, n // 2 = 3
    # n = 5, n // 2 = 2
    for layer in range(n // 2):
        # max 2, 6-1-2 = 3
        # max 1, 4-1-1 = 2
        first, last = layer, n - layer - 1 # -1 because of we don't want to change the last one
        # i from 0 till 3
        for i in range(first, last):
            print('i:', i)
            # save top
            top = matrix[layer][i]

            # left -> top
            matrix[layer][i] = matrix[-i - 1][layer]

            # bottom -> left
            matrix[-i - 1][layer] = matrix[-layer - 1][-i - 1]

            # right -> bottom
            matrix[-layer - 1][-i - 1] = matrix[i][- layer - 1]

            # top -> right
            matrix[i][- layer - 1] = top
            print('matrix:', matrix)
    return matrix

# simple example
def rotate_matrix_2(matrix):
    temp = zip(*matrix[::-1])
    return [list(elem) for elem in temp]

import unittest


def rotated(matrix):
    length = len(matrix)

    for layer in range(length//2):

        first, last = layer, length-layer-1

        for i in range(first, last):
            # top
            top = matrix[layer][i]

            # left -> top
            # 2 -> 0(i), 1(j)
            # 16 -> -1(-j), 0(i)
            matrix[layer][i] = matrix[-i-1][layer]

            # bottom -> left
            # 6 -> 1(i), 0(j)
            # 22 -> 4(-j), 1(i)
            matrix[-i-1][layer] = matrix[-layer-1][-i-1]

            # right -> bottom
            # 22 -> 4(i), 1(j)
            # 20 -> -1(j), 4(i)
            matrix[-layer-1][-i-1] = matrix[i][-layer-1]

            # top->right
            matrix[i][-layer-1] = top

    return matrix
            
class Test(unittest.TestCase):
    '''Test Cases'''
    data = [
        ([
            [1,   2,  3,  4,  5],
            [6,   7,  8,  9, 10],
            [11, 12, 13, 14, 15],
            [16, 17, 18, 19, 20],
            [21, 22, 23, 24, 25]
        ], [
            [21, 16, 11, 6, 1],
            [22, 17, 12, 7, 2],
            [23, 18, 13, 8, 3],
            [24, 19, 14, 9, 4],
            [25, 20, 15, 10, 5]
        ])
    ]

    def test_rotate_matrix(self):
        for [test_matrix, expected] in self.data:
            actual = rotated(test_matrix)
            self.assertEqual(actual, expected)

if __name__ == "__main__":
    unittest.main()
