# Cуществуют три вида модифицирующих операций со строками:
# вставка символа, удаление символа и замена символа.
# Напишите функцию, которая проверяет, находятся ли две строки
# на расстоянии одной модификации (или нуля модификаций).
# Пример:
#      pale,  ple  -> true
#      pales, pale -> true
#      pale,  bale -> true
#      pale,  bake -> false
# Подсказки: 23, 97, 130

def one_replaced(string_1, string_2):
    edited = False
    for s_1, s_2 in zip(string_1, string_2):
        if s_1 != s_2:
            if edited:
                return False
            edited = True
    return True

def one_inserted(string_1, string_2):
    edited = False
    i = 0
    for j in range(len(string_2)):
        if string_1[i] != string_2[j]:
            if edited:
                return False
            edited = True
            i += 1
        i += 1
    return True
    
def one_away(string_1, string_2):
    if string_1 is string_2:
        return True
    
    if len(string_1) == len(string_2):
        return one_replaced(string_1, string_2)
    if len(string_1) + 1 == len(string_2):
        return one_inserted(string_2, string_1)
    if len(string_1) - 1 == len(string_2):
        return one_inserted(string_1, string_2)
    return False

import unittest

class Test(unittest.TestCase):
    true  = [('pale',  'ple'), ('pales', 'pale'), ('pale',  'bale')]
    false = [('pale',  'bake')]

    def test_diff(self):
        for test in self.true:
            self.assertTrue(one_away(*test))
        for test in self.false:
            self.assertFalse(one_away(*test))

if __name__ == '__main__':
    unittest.main()
