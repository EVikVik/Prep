# Напишите функцию, которая проверяет, является ли заданная строка
# перестановкой палиндрома. (Палиндром — слово или фраза,
# одинаково читающиеся в прямом и обратном направлении;
# перестановка — строка, содержащая те же символы в другом порядке.)
# Палиндром не ограничивается словами из словаря.
# Пример:
# Ввод: Tact Coa
# Вывод: True (перестановки: "taco cat", "atco cta", и т. д.)
# Подсказки: 106, 121, 134, 136

def is_polindrom_permutation(string):
    if len(string)<2:
        return True
    
    symbols_set = set()
    for s in string.lower():
        if s.isalpha():
            if s in symbols_set:
                symbols_set.remove(s)
            else:
                symbols_set.add(s)
            
    if len(symbols_set)>1:
        return False

    return True

import unittest

class Test(unittest.TestCase):
    true   = ["taco cat18", "atco cta!", "Tact Coa"]
    false  = ["fggh", "taco caU"]

    def test_perm(self):
        for test in self.true:
            self.assertTrue(is_polindrom_permutation(test))
        for test in self.false:
            self.assertFalse(is_polindrom_permutation(test))
    
        
if __name__ == '__main__':
    unittest.main()
